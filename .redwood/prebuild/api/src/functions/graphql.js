import { authDecoder } from '@redwoodjs/auth-dbauth-api';
import { createGraphQLHandler } from '@redwoodjs/graphql-server';
let directives = {};
import * as directives_requireAuth_requireAuth from "../directives/requireAuth/requireAuth";
directives.requireAuth_requireAuth = directives_requireAuth_requireAuth;
import * as directives_skipAuth_skipAuth from "../directives/skipAuth/skipAuth";
directives.skipAuth_skipAuth = directives_skipAuth_skipAuth;
let sdls = {};
import * as sdls_contacts_sdl from "../graphql/contacts.sdl";
sdls.contacts_sdl = sdls_contacts_sdl;
import * as sdls_users_sdl from "../graphql/users.sdl";
sdls.users_sdl = sdls_users_sdl;
let services = {};
import * as services_contacts_contacts from "../services/contacts/contacts";
services.contacts_contacts = services_contacts_contacts;
import * as services_users_users from "../services/users/users";
services.users_users = services_users_users;
import { getCurrentUser } from "../lib/auth";
import { db } from "../lib/db";
import { logger } from "../lib/logger";
export const handler = createGraphQLHandler({
  authDecoder,
  getCurrentUser,
  loggerConfig: {
    logger,
    options: {}
  },
  directives,
  sdls,
  services,
  onException: () => {
    // Disconnect from your database with an unhandled exception.
    db.$disconnect();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhdXRoRGVjb2RlciIsImNyZWF0ZUdyYXBoUUxIYW5kbGVyIiwiZGlyZWN0aXZlcyIsImRpcmVjdGl2ZXNfcmVxdWlyZUF1dGhfcmVxdWlyZUF1dGgiLCJyZXF1aXJlQXV0aF9yZXF1aXJlQXV0aCIsImRpcmVjdGl2ZXNfc2tpcEF1dGhfc2tpcEF1dGgiLCJza2lwQXV0aF9za2lwQXV0aCIsInNkbHMiLCJzZGxzX2NvbnRhY3RzX3NkbCIsImNvbnRhY3RzX3NkbCIsInNkbHNfdXNlcnNfc2RsIiwidXNlcnNfc2RsIiwic2VydmljZXMiLCJzZXJ2aWNlc19jb250YWN0c19jb250YWN0cyIsImNvbnRhY3RzX2NvbnRhY3RzIiwic2VydmljZXNfdXNlcnNfdXNlcnMiLCJ1c2Vyc191c2VycyIsImdldEN1cnJlbnRVc2VyIiwiZGIiLCJsb2dnZXIiLCJoYW5kbGVyIiwibG9nZ2VyQ29uZmlnIiwib3B0aW9ucyIsIm9uRXhjZXB0aW9uIiwiJGRpc2Nvbm5lY3QiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9hcGkvc3JjL2Z1bmN0aW9ucy9ncmFwaHFsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF1dGhEZWNvZGVyIH0gZnJvbSAnQHJlZHdvb2Rqcy9hdXRoLWRiYXV0aC1hcGknXHJcbmltcG9ydCB7IGNyZWF0ZUdyYXBoUUxIYW5kbGVyIH0gZnJvbSAnQHJlZHdvb2Rqcy9ncmFwaHFsLXNlcnZlcidcclxuXHJcbmltcG9ydCBkaXJlY3RpdmVzIGZyb20gJ3NyYy9kaXJlY3RpdmVzLyoqLyoue2pzLHRzfSdcclxuaW1wb3J0IHNkbHMgZnJvbSAnc3JjL2dyYXBocWwvKiovKi5zZGwue2pzLHRzfSdcclxuaW1wb3J0IHNlcnZpY2VzIGZyb20gJ3NyYy9zZXJ2aWNlcy8qKi8qLntqcyx0c30nXHJcblxyXG5pbXBvcnQgeyBnZXRDdXJyZW50VXNlciB9IGZyb20gJ3NyYy9saWIvYXV0aCdcclxuaW1wb3J0IHsgZGIgfSBmcm9tICdzcmMvbGliL2RiJ1xyXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdzcmMvbGliL2xvZ2dlcidcclxuXHJcbmV4cG9ydCBjb25zdCBoYW5kbGVyID0gY3JlYXRlR3JhcGhRTEhhbmRsZXIoe1xyXG4gIGF1dGhEZWNvZGVyLFxyXG4gIGdldEN1cnJlbnRVc2VyLFxyXG4gIGxvZ2dlckNvbmZpZzogeyBsb2dnZXIsIG9wdGlvbnM6IHt9IH0sXHJcbiAgZGlyZWN0aXZlcyxcclxuICBzZGxzLFxyXG4gIHNlcnZpY2VzLFxyXG4gIG9uRXhjZXB0aW9uOiAoKSA9PiB7XHJcbiAgICAvLyBEaXNjb25uZWN0IGZyb20geW91ciBkYXRhYmFzZSB3aXRoIGFuIHVuaGFuZGxlZCBleGNlcHRpb24uXHJcbiAgICBkYi4kZGlzY29ubmVjdCgpXHJcbiAgfSxcclxufSlcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxXQUFXLFFBQVEsNEJBQTRCO0FBQ3hELFNBQVNDLG9CQUFvQixRQUFRLDJCQUEyQjtBQUFBLElBQUFDLFVBQUE7QUFBQSxZQUFBQyxrQ0FBQTtBQUFBRCxVQUFBLENBQUFFLHVCQUFBLEdBQUFELGtDQUFBO0FBQUEsWUFBQUUsNEJBQUE7QUFBQUgsVUFBQSxDQUFBSSxpQkFBQSxHQUFBRCw0QkFBQTtBQUFBLElBQUFFLElBQUE7QUFBQSxZQUFBQyxpQkFBQTtBQUFBRCxJQUFBLENBQUFFLFlBQUEsR0FBQUQsaUJBQUE7QUFBQSxZQUFBRSxjQUFBO0FBQUFILElBQUEsQ0FBQUksU0FBQSxHQUFBRCxjQUFBO0FBQUEsSUFBQUUsUUFBQTtBQUFBLFlBQUFDLDBCQUFBO0FBQUFELFFBQUEsQ0FBQUUsaUJBQUEsR0FBQUQsMEJBQUE7QUFBQSxZQUFBRSxvQkFBQTtBQUFBSCxRQUFBLENBQUFJLFdBQUEsR0FBQUQsb0JBQUE7QUFNaEUsU0FBU0UsY0FBYztBQUN2QixTQUFTQyxFQUFFO0FBQ1gsU0FBU0MsTUFBTTtBQUVmLE9BQU8sTUFBTUMsT0FBTyxHQUFHbkIsb0JBQW9CLENBQUM7RUFDMUNELFdBQVc7RUFDWGlCLGNBQWM7RUFDZEksWUFBWSxFQUFFO0lBQUVGLE1BQU07SUFBRUcsT0FBTyxFQUFFLENBQUM7RUFBRSxDQUFDO0VBQ3JDcEIsVUFBVTtFQUNWSyxJQUFJO0VBQ0pLLFFBQVE7RUFDUlcsV0FBVyxFQUFFQSxDQUFBLEtBQU07SUFDakI7SUFDQUwsRUFBRSxDQUFDTSxXQUFXLENBQUMsQ0FBQztFQUNsQjtBQUNGLENBQUMsQ0FBQyJ9